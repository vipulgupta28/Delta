// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import { BasePage } from "../../pagination.mjs";
export class PlaybackRestrictions extends APIResource {
    /**
     * Create a new Playback Restriction.
     *
     * @example
     * ```ts
     * const playbackRestriction =
     *   await client.video.playbackRestrictions.create({
     *     referrer: {
     *       allowed_domains: ['*.example.com'],
     *       allow_no_referrer: true,
     *     },
     *     user_agent: {
     *       allow_no_user_agent: false,
     *       allow_high_risk_user_agent: false,
     *     },
     *   });
     * ```
     */
    create(body, options) {
        return this._client.post('/video/v1/playback-restrictions', {
            body,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieves a Playback Restriction associated with the unique identifier.
     *
     * @example
     * ```ts
     * const playbackRestriction =
     *   await client.video.playbackRestrictions.retrieve(
     *     'PLAYBACK_RESTRICTION_ID',
     *   );
     * ```
     */
    retrieve(playbackRestrictionId, options) {
        return this._client.get(`/video/v1/playback-restrictions/${playbackRestrictionId}`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/playback-restrictions', PlaybackRestrictionsBasePage, {
            query,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
    /**
     * Deletes a single Playback Restriction.
     *
     * @example
     * ```ts
     * await client.video.playbackRestrictions.delete(
     *   'PLAYBACK_RESTRICTION_ID',
     * );
     * ```
     */
    delete(playbackRestrictionId, options) {
        return this._client.delete(`/video/v1/playback-restrictions/${playbackRestrictionId}`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Allows you to modify the list of domains or change how Mux validates playback
     * requests without the `Referer` HTTP header. The Referrer restriction fully
     * replaces the old list with this new list of domains.
     *
     * @example
     * ```ts
     * const playbackRestriction =
     *   await client.video.playbackRestrictions.updateReferrer(
     *     'PLAYBACK_RESTRICTION_ID',
     *     {
     *       allowed_domains: ['*.example.com'],
     *       allow_no_referrer: true,
     *     },
     *   );
     * ```
     */
    updateReferrer(playbackRestrictionId, body, options) {
        return this._client.put(`/video/v1/playback-restrictions/${playbackRestrictionId}/referrer`, {
            body,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Allows you to modify how Mux validates playback requests with different user
     * agents. Please see
     * [Using User-Agent HTTP header for validation](https://docs.mux.com/guides/secure-video-playback#using-user-agent-http-header-for-validation)
     * for more details on this feature.
     *
     * @example
     * ```ts
     * const playbackRestriction =
     *   await client.video.playbackRestrictions.updateUserAgent(
     *     'PLAYBACK_RESTRICTION_ID',
     *     {
     *       allow_high_risk_user_agent: false,
     *       allow_no_user_agent: false,
     *     },
     *   );
     * ```
     */
    updateUserAgent(playbackRestrictionId, body, options) {
        return this._client.put(`/video/v1/playback-restrictions/${playbackRestrictionId}/user_agent`, {
            body,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
}
export class PlaybackRestrictionsBasePage extends BasePage {
}
PlaybackRestrictions.PlaybackRestrictionsBasePage = PlaybackRestrictionsBasePage;
//# sourceMappingURL=playback-restrictions.mjs.map