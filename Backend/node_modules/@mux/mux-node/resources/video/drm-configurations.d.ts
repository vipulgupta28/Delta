import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import { BasePage, type BasePageParams } from "../../pagination.js";
export declare class DRMConfigurations extends APIResource {
    /**
     * Retrieves a single DRM Configuration.
     *
     * @example
     * ```ts
     * const drmConfiguration =
     *   await client.video.drmConfigurations.retrieve(
     *     'DRM_CONFIGURATION_ID',
     *   );
     * ```
     */
    retrieve(drmConfigurationId: string, options?: Core.RequestOptions): Core.APIPromise<DRMConfiguration>;
    /**
     * Returns a list of DRM Configurations
     *
     * @example
     * ```ts
     * // Automatically fetches more pages as needed.
     * for await (const drmConfiguration of client.video.drmConfigurations.list()) {
     *   // ...
     * }
     * ```
     */
    list(query?: DRMConfigurationListParams, options?: Core.RequestOptions): Core.PagePromise<DRMConfigurationsBasePage, DRMConfiguration>;
    list(options?: Core.RequestOptions): Core.PagePromise<DRMConfigurationsBasePage, DRMConfiguration>;
}
export declare class DRMConfigurationsBasePage extends BasePage<DRMConfiguration> {
}
export interface DRMConfiguration {
    /**
     * Unique identifier for the DRM Configuration. Max 255 characters.
     */
    id: string;
}
export interface DRMConfigurationListParams extends BasePageParams {
}
export declare namespace DRMConfigurations {
    export { type DRMConfiguration as DRMConfiguration, DRMConfigurationsBasePage as DRMConfigurationsBasePage, type DRMConfigurationListParams as DRMConfigurationListParams, };
}
//# sourceMappingURL=drm-configurations.d.ts.map