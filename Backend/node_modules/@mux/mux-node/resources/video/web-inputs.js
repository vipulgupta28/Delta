"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebInputListResponsesBasePage = exports.WebInputs = void 0;
const resource_1 = require("../../resource.js");
const core_1 = require("../../core.js");
const pagination_1 = require("../../pagination.js");
class WebInputs extends resource_1.APIResource {
    /**
     * Create a new Web Input
     *
     * @example
     * ```ts
     * const webInput = await client.video.webInputs.create({
     *   live_stream_id:
     *     'ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag',
     *   url: 'https://example.com/hello.html',
     * });
     * ```
     */
    create(body, options) {
        return this._client.post('/video/v1/web-inputs', {
            body,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieve a single Web Input's info
     *
     * @example
     * ```ts
     * const webInput = await client.video.webInputs.retrieve(
     *   'abcd1234',
     * );
     * ```
     */
    retrieve(webInputId, options) {
        return this._client.get(`/video/v1/web-inputs/${webInputId}`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/web-inputs', WebInputListResponsesBasePage, {
            query,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
    /**
     * Deletes a Web Input and all its data
     *
     * @example
     * ```ts
     * await client.video.webInputs.delete('abcd1234');
     * ```
     */
    delete(webInputId, options) {
        return this._client.delete(`/video/v1/web-inputs/${webInputId}`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Launches the browsers instance, loads the URL specified, and then starts
     * streaming to the specified Live Stream.
     *
     * @example
     * ```ts
     * const response = await client.video.webInputs.launch(
     *   'abcd1234',
     * );
     * ```
     */
    launch(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/launch`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Reloads the page that a Web Input is displaying.
     *
     * Note: Using this when the Web Input is streaming will display the page
     * reloading.
     *
     * @example
     * ```ts
     * const response = await client.video.webInputs.reload(
     *   'abcd1234',
     * );
     * ```
     */
    reload(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/reload`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Ends streaming to the specified Live Stream, and then shuts down the Web Input
     * browser instance.
     *
     * @example
     * ```ts
     * const response = await client.video.webInputs.shutdown(
     *   'abcd1234',
     * );
     * ```
     */
    shutdown(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/shutdown`, {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Changes the URL that a Web Input loads when it launches.
     *
     * Note: This can only be called when the Web Input is idle.
     *
     * @example
     * ```ts
     * const response = await client.video.webInputs.updateURL(
     *   'abcd1234',
     *   { url: 'https://example.com/hello-there.html' },
     * );
     * ```
     */
    updateURL(webInputId, body, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/url`, {
            body,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
}
exports.WebInputs = WebInputs;
class WebInputListResponsesBasePage extends pagination_1.BasePage {
}
exports.WebInputListResponsesBasePage = WebInputListResponsesBasePage;
WebInputs.WebInputListResponsesBasePage = WebInputListResponsesBasePage;
//# sourceMappingURL=web-inputs.js.map