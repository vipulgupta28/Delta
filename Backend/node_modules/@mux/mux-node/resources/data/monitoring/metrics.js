"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrics = void 0;
const resource_1 = require("../../../resource.js");
const core_1 = require("../../../core.js");
class Metrics extends resource_1.APIResource {
    /**
     * Lists available monitoring metrics.
     *
     * @example
     * ```ts
     * const metrics = await client.data.monitoring.metrics.list();
     * ```
     */
    list(options) {
        return this._client.get('/data/v1/monitoring/metrics', {
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
    getBreakdown(monitoringMetricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getBreakdown(monitoringMetricId, {}, query);
        }
        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/breakdown`, {
            query,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
    getBreakdownTimeseries(monitoringMetricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getBreakdownTimeseries(monitoringMetricId, {}, query);
        }
        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/breakdown-timeseries`, {
            query,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
    getHistogramTimeseries(monitoringHistogramMetricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getHistogramTimeseries(monitoringHistogramMetricId, {}, query);
        }
        return this._client.get(`/data/v1/monitoring/metrics/${monitoringHistogramMetricId}/histogram-timeseries`, { query, defaultBaseURL: 'https://api.mux.com', ...options });
    }
    getTimeseries(monitoringMetricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getTimeseries(monitoringMetricId, {}, query);
        }
        return this._client.get(`/data/v1/monitoring/metrics/${monitoringMetricId}/timeseries`, {
            query,
            defaultBaseURL: 'https://api.mux.com',
            ...options,
        });
    }
}
exports.Metrics = Metrics;
//# sourceMappingURL=metrics.js.map